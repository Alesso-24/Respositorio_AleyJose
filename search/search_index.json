{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Ingenier\u00eda Mecatr\u00f3nica - Documentaci\u00f3n","text":""},{"location":"#jose-manuel-compean-gongora","title":"Jos\u00e9 Manuel Compe\u00e1n G\u00f3ngora","text":"<p>Resumen:  Ingenier\u00eda Mecatr\u00f3nica | 203609@iberopuebla.mx</p> <p></p> <p>Soy Jos\u00e9 Manuel, estudiante de Ingenier\u00eda Mecatr\u00f3nica, apasionado por la tecnolog\u00eda, la programaci\u00f3n y los sistemas electr\u00f3nicos. Aprendo de manera pr\u00e1ctica, aplicando conceptos matem\u00e1ticos y t\u00e9cnicos a situaciones reales. He cursado Electr\u00f3nica Anal\u00f3gica y Sistemas Digitales, y mi enfoque actual est\u00e1 en rob\u00f3tica, donde disfruto integrar sensado, control y actuadores con microcontroladores y l\u00f3gica digital.</p> <p>Me considero una persona cercana, expresiva y curiosa, con gusto por aprender de los dem\u00e1s y mejorar continuamente. Busco equilibrar lo acad\u00e9mico con mi vida diaria, siendo emp\u00e1tico con quienes me rodean y creciendo tambi\u00e9n en lo emocional.</p> <p>El deporte y la actividad f\u00edsica son parte importante de mi vida porque me aportan disciplina y claridad mental. Sobre todo, me motiva seguir aprendiendo electr\u00f3nica: desde el an\u00e1lisis de circuitos y el dise\u00f1o de PCBs hasta la integraci\u00f3n de hardware y software para resolver problemas reales.</p>"},{"location":"#jordi-alessandro-reyes-martinez","title":"Jordi Alessandro Reyes Mart\u00ednez","text":"<p>Ingenier\u00eda Mecatr\u00f3nica | jordi.reyes@iberopuebla.mx</p> <p></p> <p>Resumen: Soy Alessandro Reyes, estudiante de Ingenier\u00eda Mecatr\u00f3nica en la IBERO Puebla, apasionado por la ciencia, la innovaci\u00f3n y los proyectos con impacto social. He desarrollado prototipos enfocados en inclusi\u00f3n y aprendizaje, como Infoc\u00e9lula y LumiBrain, que reflejan mi inter\u00e9s por combinar la tecnolog\u00eda con soluciones que transformen la vida de las personas.</p> <p>Me defino como alguien curioso, creativo y proactivo, con experiencia en liderazgo de proyectos, trabajo comunitario en distintas regiones de M\u00e9xico y participaci\u00f3n en concursos acad\u00e9micos. Mi meta es crecer profesionalmente, vincularme con la industria automotriz en Alemania y dejar una huella positiva en cada reto que enfrento.</p>"},{"location":"555/","title":"\ud83d\udcda Documentaci\u00f3n de la Pr\u00e1ctica \u2013 Temporizador 555 en modo Astable","text":"<p>Proyecto acad\u00e9mico de electr\u00f3nica b\u00e1sica: implementaci\u00f3n de un oscilador astable con el CI 555 para hacer parpadear un LED. Los c\u00e1lculos y simulaciones se realizaron en base a la configuraci\u00f3n est\u00e1ndar del 555.</p>"},{"location":"555/#1-resumen","title":"1) Resumen","text":"<ul> <li>Nombre del proyecto: Oscilador Astable con 555  </li> <li>Equipo / Autor(es): Alessandro Reyes, Jose G\u00f3ngora, Sebasti\u00e1n Cortez  </li> <li>Curso / Asignatura: Electr\u00f3nica / Circuitos Digitales  </li> <li>Fecha: 05/09/2025 </li> <li>Descripci\u00f3n breve: Se dise\u00f1\u00f3 un circuito con el temporizador 555 en modo astable para encender y apagar un LED cada 3\u20135 segundos, armado de forma f\u00edsica y documentado con evidencia en fotos y video.</li> </ul> <p>Consejo</p> <p>Este proyecto sirve como introducci\u00f3n al uso del 555 como generador de se\u00f1ales peri\u00f3dicas.</p>"},{"location":"555/#2-objetivos","title":"2) Objetivos","text":"<p>General: Implementar un circuito oscilador astable con el CI 555 para controlar el parpadeo de un LED.  </p> <p>Espec\u00edficos:   - Dise\u00f1ar el circuito con valores adecuados de resistencias y capacitores.   - Calcular te\u00f3ricamente los tiempos alto y bajo de la se\u00f1al.   - Verificar en la pr\u00e1ctica el correcto parpadeo del LED.   - Comparar resultados te\u00f3ricos y experimentales.  </p>"},{"location":"555/#3-alcance-y-exclusiones","title":"3) Alcance y Exclusiones","text":"<p>Incluye:   - Implementaci\u00f3n en protoboard del 555 en modo astable.   - LED parpadeando con periodo de 3\u20135 segundos.   - Documentaci\u00f3n de c\u00e1lculos y resultados.   - Evidencia en fotos y video.  </p> <p>No incluye:   - Dise\u00f1o de PCB.   - Simulaci\u00f3n en software especializado.   - Implementaci\u00f3n con microcontroladores.  </p>"},{"location":"555/#4-requisitos","title":"4) Requisitos","text":"<p>Hardware - 1 \u00d7 CI 555 - 1 \u00d7 Resistencia R1 = 1 k\u03a9 - 1 \u00d7 Resistencia R2 = 20 k\u03a9 - 1 \u00d7 Capacitor electrol\u00edtico C1 = 330 \u00b5F - 1 \u00d7 LED + resistencia limitadora (330 \u03a9 \u2013 1 k\u03a9) - Fuente de alimentaci\u00f3n (5\u20139 VDC) - Protoboard y cables  </p> <p>Conocimientos previos - Ley de Ohm y c\u00e1lculo de resistencias - Funcionamiento del temporizador 555 - Uso de protoboard y mult\u00edmetro  </p>"},{"location":"555/#5-procedimiento-e-instalacion","title":"5) Procedimiento e Instalaci\u00f3n","text":"<ol> <li>Armar el circuito seg\u00fan el diagrama: </li> </ol> <p>Figura 1. Diagrama del temporizador 555 en modo astable</p> <ol> <li>C\u00e1lculos te\u00f3ricos: </li> </ol> <p>Figura 2. C\u00e1lculos te\u00f3ricos del circuito</p> <ol> <li>Observaci\u00f3n pr\u00e1ctica: El LED permanece encendido ~4.8 s y apagado ~4.6 s, cumpliendo con el requisito (3\u20135 s).</li> </ol>"},{"location":"555/#6-resultados","title":"6) Resultados","text":"<ul> <li>\u2705 LED parpadea dentro del rango esperado (aprox. 9.3 s de periodo total).  </li> <li>\u2705 El comportamiento pr\u00e1ctico coincide con las f\u00f3rmulas.  </li> <li>\u2705 El 555 demostr\u00f3 ser un generador confiable de pulsos de baja frecuencia.</li> </ul> <p>Fotos del montaje f\u00edsico:</p> <p></p> <p>Figura 3. Montaje f\u00edsico \u2013 Vista 1</p> <p></p> <p>Figura 4. Montaje f\u00edsico \u2013 Vista 2</p>"},{"location":"555/#7-video-de-funcionamiento","title":"7) Video de funcionamiento","text":"<p>Figura 3. Video del LED parpadeando</p> <p>\ud83d\udd17 Ver video en OneDrive</p>"},{"location":"esp32_LED/","title":"\ud83d\udcda Documentaci\u00f3n de la Pr\u00e1ctica \u2013 Control de LED con ESP32 (M\u00faltiples Modos)","text":"<p>\ud83e\udde0 Proyecto acad\u00e9mico de introducci\u00f3n a la mecatr\u00f3nica: Implementaci\u00f3n de la placa ESP32 para el control de un LED en tres modos distintos: temporizado, mediante interacci\u00f3n f\u00edsica (bot\u00f3n) y por comunicaci\u00f3n inal\u00e1mbrica (Bluetooth Serial).</p>"},{"location":"esp32_LED/#1-resumen","title":"\ud83e\udded 1) Resumen","text":"Elemento Descripci\u00f3n Nombre del proyecto: LED Multi-Control con ESP32 (Blink, Bot\u00f3n y Bluetooth) Equipo / Autor(es): Alessandro Reyes, Jos\u00e9 Compe\u00e1n Curso / Asignatura: Introducci\u00f3n a la Mecatr\u00f3nica / Programaci\u00f3n de Microcontroladores Fecha: 12 sep 2025 Descripci\u00f3n breve: Se exploraron las funcionalidades b\u00e1sicas de la ESP32 (GPIOs, temporizaci\u00f3n, lectura de entradas y comunicaci\u00f3n inal\u00e1mbrica) implementando tres programas que controlan un LED: parpadeo constante, encendido por pulsaci\u00f3n de bot\u00f3n y control remoto por comandos de texto v\u00eda Bluetooth. <p>\ud83d\udca1 Consejo: Esta pr\u00e1ctica es fundamental para comprender la versatilidad de la ESP32 en la interacci\u00f3n con el entorno (inputs f\u00edsicos) y la comunicaci\u00f3n remota (Bluetooth).</p>"},{"location":"esp32_LED/#2-objetivos","title":"\ud83c\udfaf 2) Objetivos","text":"<p>General: Aplicar los conceptos b\u00e1sicos de programaci\u00f3n de microcontroladores para controlar un actuador (LED) y procesar diferentes tipos de entradas (tiempo, se\u00f1al digital y datos seriales).</p> <p>Espec\u00edficos: - Controlar el tiempo de encendido/apagado del LED usando <code>delay()</code>. - Leer el estado de un bot\u00f3n (entrada digital) y reflejarlo en el LED. - Implementar la comunicaci\u00f3n Bluetooth Serial (SPP). - Procesar los comandos de texto (<code>HIGH</code> / <code>LOW</code>) recibidos por Bluetooth.</p>"},{"location":"esp32_LED/#3-alcance-y-exclusiones","title":"\ud83d\udccb 3) Alcance y Exclusiones","text":"<p>Incluye: - Implementaci\u00f3n de tres programas independientes cargados a la ESP32. - Uso del LED en GPIO 2 y bot\u00f3n en GPIO 4. - Configuraci\u00f3n y prueba de la comunicaci\u00f3n Bluetooth Serial. - C\u00f3digo fuente para las tres etapas.</p> <p>No incluye: - Uso de interrupciones o temporizadores avanzados. - Dise\u00f1o de PCB. - Control basado en Wi-Fi.</p>"},{"location":"esp32_LED/#4-requisitos","title":"\u2699\ufe0f 4) Requisitos","text":""},{"location":"esp32_LED/#hardware","title":"\ud83e\uddf0 Hardware","text":"<ul> <li>1 \u00d7 Placa de desarrollo ESP32 </li> <li>1 \u00d7 LED de cualquier color  </li> <li>1 \u00d7 Resistencia limitadora (220 \u03a9)  </li> <li>1 \u00d7 Bot\u00f3n (pulsador)  </li> <li>1 \u00d7 Resistencia Pull-down (10 k\u03a9)  </li> <li>1 \u00d7 Protoboard y cables  </li> <li>Fuente de alimentaci\u00f3n (5 VDC)  </li> <li>Smartphone con Bluetooth y aplicaci\u00f3n Bluetooth Serial</li> </ul>"},{"location":"esp32_LED/#conocimientos-previos","title":"\ud83d\udcd8 Conocimientos previos","text":"<ul> <li>Programaci\u00f3n en C/C++ (Arduino IDE) </li> <li>Manejo de entradas y salidas digitales (GPIO)  </li> <li>Conceptos b\u00e1sicos de comunicaci\u00f3n serial</li> </ul>"},{"location":"esp32_LED/#5-procedimiento-e-instalacion","title":"\ud83d\udd27 5) Procedimiento e Instalaci\u00f3n","text":"<ol> <li> <p>Montaje del Hardware:    Conectar el LED al GPIO 2 (con su resistencia limitadora) y el Bot\u00f3n al GPIO 4 (con resistencia Pull-down a GND).</p> </li> <li> <p>Carga secuencial de C\u00f3digo:    Cargar cada uno de los tres c\u00f3digos de forma individual a la ESP32 para verificar su funcionamiento.</p> </li> <li> <p>Prueba funcional: </p> </li> <li>Etapa 1: Verificar el parpadeo de 1 s.  </li> <li>Etapa 2: Verificar el encendido solo al presionar el bot\u00f3n.  </li> <li>Etapa 3: Emparejar por Bluetooth y enviar comandos <code>HIGH</code> / <code>LOW</code>.</li> </ol>"},{"location":"esp32_LED/#51-codigo-de-programacion","title":"\ud83d\udcbb 5.1) C\u00f3digo de Programaci\u00f3n","text":""},{"location":"esp32_LED/#etapa-1-led-parpadeante-simple-blink","title":"\ud83d\udd39 Etapa 1 \u2013 LED Parpadeante Simple (Blink) \u23f3","text":"<p>// Definici\u00f3n del pin del LED const int ledPin = 2; // Usamos el GPIO 2</p> <p>void setup() {   pinMode(ledPin, OUTPUT); }</p> <p>void loop() {   // Enciende el LED   digitalWrite(ledPin, HIGH);   delay(1000); // Espera 1 segundo</p> <p>// Apaga el LED   digitalWrite(ledPin, LOW);   delay(1000); // Espera 1 segundo }</p>"},{"location":"esp32_LED/#etapa-2-control-del-led-con-boton","title":"\ud83d\udd39 Etapa 2 \u2013 Control del LED con Bot\u00f3n \ud83d\udd18","text":"<p>El LED se enciende mientras el bot\u00f3n est\u00e1 siendo presionado.</p> <p>// Definici\u00f3n de pines const int ledPin = 2;    // LED en GPIO 2 const int buttonPin = 4; // Bot\u00f3n en GPIO 4</p> <p>void setup() {   pinMode(ledPin, OUTPUT);   // El bot\u00f3n est\u00e1 conectado con una resistencia pull-down externa   pinMode(buttonPin, INPUT);  }</p> <p>void loop() {   // Leer el estado del bot\u00f3n (HIGH al presionar)   int buttonState = digitalRead(buttonPin);</p> <p>// Escribir el estado del bot\u00f3n directamente al LED   digitalWrite(ledPin, buttonState);</p> <p>delay(10); // Anti-rebote simple }</p>"},{"location":"esp32_LED/#etapa-3-control-del-led-por-bluetooth-serial","title":"\ud83d\udd39 Etapa 3 \u2013 Control del LED por Bluetooth Serial \ud83d\udcf2","text":"<p>El LED se controla enviando el texto HIGH o LOW desde una app Bluetooth.</p> <p>BluetoothSerial SerialBT; const int ledPin = 2; String message = \"\"; // Buffer para el comando</p> <p>void setup() {   Serial.begin(115200);   pinMode(ledPin, OUTPUT);</p> <p>SerialBT.begin(\"ESP32_Control_LED\"); // Nombre del dispositivo BT   Serial.println(\"Bluetooth iniciado.\"); }</p> <p>void loop() { if (SerialBT.available()) {     char incomingChar = SerialBT.read();</p> <pre><code>if (incomingChar != '\\n') {\n  message += incomingChar;\n} else {\n  message.trim();\n  message.toUpperCase();\n\n  Serial.print(\"Comando recibido: \");\n  Serial.println(message);\n\n  if (message == \"HIGH\") {\n    digitalWrite(ledPin, HIGH);\n    SerialBT.println(\"\u2705 LED Encendido\");\n  } else if (message == \"LOW\") {\n    digitalWrite(ledPin, LOW);\n    SerialBT.println(\"\u274c LED Apagado\");\n  } else {\n    SerialBT.println(\"\u26a0\ufe0f Comando inv\u00e1lido. Use HIGH o LOW.\");\n  }\n  message = \"\";\n}\n</code></pre> <p>}   delay(20); }</p>"},{"location":"esp32_LED/#6-resultados","title":"\ud83d\udcca 6) Resultados","text":"Etapa Descripci\u00f3n Resultado 1\ufe0f\u20e3 Blink Control temporizado del LED \u2705 Precisi\u00f3n de 2 s por ciclo 2\ufe0f\u20e3 Bot\u00f3n Control f\u00edsico con entrada digital \u2705 Funcionamiento estable 3\ufe0f\u20e3 Bluetooth Control remoto v\u00eda comandos \u2705 Comunicaci\u00f3n correcta <p>\ud83d\udd0d Se demostr\u00f3 la capacidad de la ESP32 para manejar tareas de temporizaci\u00f3n, entradas digitales y comunicaci\u00f3n inal\u00e1mbrica mediante Bluetooth.</p>"},{"location":"esp32_LED/#7-videos-de-funcionamiento","title":"\ud83c\udfa5 7) Videos de Funcionamiento","text":""},{"location":"esp32_LED/#video-1-control-de-led-con-boton","title":"\u25b6\ufe0f Video 1 \u2013 Control de LED con Bot\u00f3n","text":"<p>Video 1. El LED se enciende solo mientras se mantiene presionado el bot\u00f3n.</p> <p>\ud83d\udd17 Ver video</p>"},{"location":"esp32_LED/#video-2-control-de-led-por-bluetooth","title":"\u25b6\ufe0f Video 2 \u2013 Control de LED por Bluetooth","text":"<p>Video 2. Control remoto del LED enviando HIGH/LOW v\u00eda Bluetooth.</p> <p>\ud83d\udd17 Ver video</p>"},{"location":"motores_dc/","title":"\ud83d\udcda Documentaci\u00f3n de la Pr\u00e1ctica \u2013 Control de Motor DC con ESP32 (PWM y Puente H)","text":""},{"location":"motores_dc/#proyecto-academico-de-introduccion-a-la-mecatronica","title":"\ud83e\udde0 Proyecto acad\u00e9mico de introducci\u00f3n a la mecatr\u00f3nica","text":"<p>Implementaci\u00f3n de la placa ESP32 para el control de la direcci\u00f3n y velocidad de un motor DC utilizando el controlador L298N.</p>"},{"location":"motores_dc/#1-resumen","title":"\ud83e\udded 1) Resumen","text":"Elemento Descripci\u00f3n Nombre del proyecto: Control de Motor DC con L298N y ESP32 (Velocidad y Direcci\u00f3n) Equipo / Autor(es): Alessandro Reyes, Jos\u00e9 Compe\u00e1n Curso / Asignatura: Introducci\u00f3n a la Mecatr\u00f3nica / Programaci\u00f3n de Microcontroladores Fecha: 19 sep 2025 Descripci\u00f3n breve: Se exploraron las funcionalidades de la ESP32 para controlar actuadores de mayor potencia. Se implement\u00f3 el m\u00f3dulo L298N para manejar un motor DC, aplicando se\u00f1ales digitales (direcci\u00f3n) y PWM (velocidad) para realizar cambios de sentido y transiciones de aceleraci\u00f3n/desaceleraci\u00f3n. <p>\ud83d\udca1 Consejo: Esta pr\u00e1ctica es crucial para entender el uso de puentes H (como el L298N) para el control de motores y la importancia del PWM para modular la potencia en la mecatr\u00f3nica.</p>"},{"location":"motores_dc/#2-objetivos","title":"\ud83c\udfaf 2) Objetivos","text":""},{"location":"motores_dc/#general","title":"General","text":"<p>Aplicar los conceptos de modulaci\u00f3n por ancho de pulso (PWM) y el manejo de puentes H para lograr un control preciso sobre la velocidad y direcci\u00f3n de un motor DC.</p>"},{"location":"motores_dc/#especificos","title":"Espec\u00edficos","text":"<ul> <li>Configurar y utilizar los pines PWM de la ESP32 (LED Control).  </li> <li>Implementar el control de direcci\u00f3n del motor usando pines digitales.  </li> <li>Conectar y alimentar correctamente el m\u00f3dulo controlador L298N.  </li> <li>Desarrollar un programa que realice una secuencia de aceleraci\u00f3n m\u00e1xima seguida de desaceleraci\u00f3n gradual usando un ciclo <code>for</code>.</li> </ul>"},{"location":"motores_dc/#3-alcance-y-exclusiones","title":"\ud83d\udccb 3) Alcance y Exclusiones","text":"<p>Incluye: - Control de un solo motor DC (Motor A). - Implementaci\u00f3n de tres programas independientes cargados a la ESP32. - Uso de PWM para control de velocidad. - Uso de una fuente de alimentaci\u00f3n externa para el L298N. - Control de la direcci\u00f3n del motor.  </p> <p>No incluye: - Uso de encoders para feedback de velocidad. - Control de motores stepper o servomotores. - Control remoto (Wi-Fi o Bluetooth).  </p>"},{"location":"motores_dc/#4-requisitos","title":"\u2699\ufe0f 4) Requisitos","text":""},{"location":"motores_dc/#hardware","title":"\ud83e\uddf0 Hardware","text":"<ul> <li>1 \u00d7 Placa de desarrollo ESP32 </li> <li>1 \u00d7 M\u00f3dulo controlador de motores L298N (Puente H) </li> <li>1 \u00d7 Motor DC de baja potencia (ej. 5V\u201312V)  </li> <li>1 \u00d7 Fuente de alimentaci\u00f3n externa (ej. bater\u00eda 9V o adaptador 12V)  </li> <li>1 \u00d7 Protoboard y cables  </li> <li>Cables Jumper (al menos 6 M\u2013F)  </li> </ul>"},{"location":"motores_dc/#conocimientos-previos","title":"\ud83d\udcd8 Conocimientos previos","text":"<ul> <li>Programaci\u00f3n en C/C++ (Arduino IDE) </li> <li>Manejo de entradas y salidas digitales (GPIO)  </li> <li>Conceptos de PWM y duty cycle </li> <li>Principios de funcionamiento de un Puente H </li> </ul>"},{"location":"motores_dc/#5-procedimiento-e-instalacion","title":"\ud83d\udd27 5) Procedimiento e Instalaci\u00f3n","text":""},{"location":"motores_dc/#montaje-del-hardware","title":"Montaje del Hardware","text":"<ol> <li>Conectar la ESP32 al lado del motor A del L298N.  </li> <li>Utilizar la fuente externa para la alimentaci\u00f3n del L298N (pin +12V y GND).  </li> </ol>"},{"location":"motores_dc/#cableado","title":"Cableado","text":"<ul> <li>Conectar los pines de direcci\u00f3n (IN1, IN2) a pines digitales de la ESP32 (ej. GPIO 25 y 26).  </li> <li>Conectar el pin de velocidad (ENA) a un pin con capacidad PWM de la ESP32 (ej. GPIO 27).  </li> <li>Conectar el motor a las salidas OUT1/OUT2.  </li> </ul>"},{"location":"motores_dc/#carga-secuencial-de-codigo","title":"Carga secuencial de C\u00f3digo","text":"<p>Cargar cada uno de los tres c\u00f3digos de forma individual para verificar la funcionalidad (direcci\u00f3n, velocidad fija y aceleraci\u00f3n/desaceleraci\u00f3n).</p>"},{"location":"motores_dc/#51-codigo-de-programacion","title":"\ud83d\udcbb 5.1) C\u00f3digo de Programaci\u00f3n","text":""},{"location":"motores_dc/#etapa-1-control-de-direccion-simple-adelante-y-atras","title":"\ud83d\udd39Etapa 1 \u2013 Control de Direcci\u00f3n Simple (Adelante y Atr\u00e1s) \ud83d\udd04","text":"<p>// Pines de control para el Motor const int IN1 = 25; // Direcci\u00f3n 1 const int IN2 = 26; // Direcci\u00f3n 2</p> <p>void setup() {   pinMode(IN1, OUTPUT);   pinMode(IN2, OUTPUT); }</p> <p>void loop() {   // 1. Gira hacia Adelante (HIGH, LOW)   digitalWrite(IN1, HIGH);   digitalWrite(IN2, LOW);   delay(3000);</p> <p>// 2. Detiene el motor (LOW, LOW)   digitalWrite(IN1, LOW);   digitalWrite(IN2, LOW);   delay(1000);</p> <p>// 3. Gira hacia Atr\u00e1s (LOW, HIGH)   digitalWrite(IN1, LOW);   digitalWrite(IN2, HIGH);   delay(3000);</p> <p>// 4. Detiene el motor (LOW, LOW)   digitalWrite(IN1, LOW);   digitalWrite(IN2, LOW);   delay(1000); }</p>"},{"location":"motores_dc/#etapa-2-control-de-velocidad-fija-con-pwm-50","title":"\ud83d\udd39Etapa 2 \u2013 Control de Velocidad Fija con PWM (50%) \u26a1","text":"<p>// Par\u00e1metros PWM de la ESP32 const int freq = 5000;      // Frecuencia PWM (5 kHz) const int ledChannel = 0;   // Canal PWM a usar (0-15) const int resolution = 8;   // Resoluci\u00f3n de 8 bits (0-255) const int dutyCycle = 127;  // 50% de velocidad (127 de 255)</p> <p>// Pines de control const int IN1 = 25; // Direcci\u00f3n 1 const int IN2 = 26; // Direcci\u00f3n 2 const int ENA = 27; // Habilitaci\u00f3n/Velocidad (PWM)</p> <p>void setup() {   pinMode(IN1, OUTPUT);   pinMode(IN2, OUTPUT);</p> <p>ledcSetup(ledChannel, freq, resolution);   ledcAttachPin(ENA, ledChannel); }</p> <p>void loop() {   // 1. Gira Adelante a 50% de velocidad   digitalWrite(IN1, HIGH);   digitalWrite(IN2, LOW);   ledcWrite(ledChannel, dutyCycle);   delay(4000);</p> <p>// Detener el motor   ledcWrite(ledChannel, 0);   delay(1000); }</p>"},{"location":"motores_dc/#etapa-3-secuencia-de-aceleracion-y-desaceleracion-gradual","title":"\ud83d\udd39Etapa 3 \u2013 Secuencia de Aceleraci\u00f3n y Desaceleraci\u00f3n Gradual \u2b06\ufe0f\u2b07\ufe0f","text":"<p>// Pines y par\u00e1metros PWM const int IN1 = 25; const int IN2 = 26; const int ENA = 27; const int ledChannel = 0; const int freq = 5000; const int resolution = 8; // Max dutyCycle = 255</p> <p>void setup() {   pinMode(IN1, OUTPUT);   pinMode(IN2, OUTPUT);   ledcSetup(ledChannel, freq, resolution);   ledcAttachPin(ENA, ledChannel);</p> <p>// Establecer una direcci\u00f3n fija (Adelante)   digitalWrite(IN1, HIGH);   digitalWrite(IN2, LOW); }</p> <p>void loop() {   // 1. Acelera r\u00e1pidamente a velocidad m\u00e1xima (100%)   ledcWrite(ledChannel, 255);   delay(3000);</p> <p>// 2. Desaceleraci\u00f3n gradual (100% a 0)   for (int dutyCycle = 255; dutyCycle &gt;= 0; dutyCycle -= 5) {     ledcWrite(ledChannel, dutyCycle);     delay(50);   }</p> <p>delay(4000); // Motor detenido por 4s antes de repetir }</p>"},{"location":"motores_dc/#6-resultados","title":"\ud83d\udcca 6) Resultados","text":"Etapa Descripci\u00f3n Resultado 1\ufe0f\u20e3 Direcci\u00f3n Control del sentido de giro (adelante/atr\u00e1s) \u2705 Reversibilidad lograda 2\ufe0f\u20e3 Velocidad Fija Control de velocidad con PWM \u2705 Velocidad estable al 50% 3\ufe0f\u20e3 Acel./Desac. Secuencia de m\u00e1xima velocidad seguida de desaceleraci\u00f3n gradual \u2705 Transici\u00f3n de velocidad controlada <p>\ud83d\udd0d Se demostr\u00f3 el control total sobre la potencia (velocidad) y el sentido de giro (direcci\u00f3n) de un motor DC, validando el uso del m\u00f3dulo L298N como interfaz de potencia.</p>"},{"location":"motores_dc/#7-videos-de-funcionamiento","title":"\ud83c\udfa5 7) Videos de Funcionamiento","text":""},{"location":"motores_dc/#video-1-aprendiendo-a-usar-un-motor","title":"\u25b6\ufe0f Video 1 \u2013 Aprendiendo a usar un motor","text":"<p>Video 1. Aprendiendo a usar un motor DC.</p> <p>\ud83d\udd17 Ver video</p>"},{"location":"motores_dc/#video-2-secuencia-de-aceleracion-y-desaceleracion","title":"\u25b6\ufe0f Video 2 \u2013 Secuencia de Aceleraci\u00f3n y Desaceleraci\u00f3n","text":"<p>Video 2. Observaci\u00f3n de la aceleraci\u00f3n a velocidad m\u00e1xima y el frenado progresivo con el ciclo 'for'.</p> <p>\ud83d\udd17 Ver video</p>"}]}